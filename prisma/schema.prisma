generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Role {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  permissions Int
  users       User[]

  ModulePermissions ModulePermissions[]
}

model Permission {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  bitmask Int

  Module   Module? @relation(fields: [moduleId], references: [id])
  moduleId String? @db.ObjectId
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String?
  lastName     String?
  name         String?
  username     String? @unique
  email        String  @unique
  password     String?
  phone        String?
  organization String?
  state        String?
  city         String?
  roleId       String  @db.ObjectId
  role         Role    @relation(fields: [roleId], references: [id])
}

model ModulePermissions {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  moduleId    String  @db.ObjectId
  roleId      String  @db.ObjectId
  submoduleId String? @db.ObjectId
  permissions Int

  role      Role    @relation(fields: [roleId], references: [id])
  module    Module  @relation(fields: [moduleId], references: [id])
  submodule Module? @relation("ModuleParent", fields: [submoduleId], references: [id])

  @@unique([roleId, moduleId])
  @@unique([roleId, moduleId, submoduleId])
}

model Module {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  parentId             String?             @db.ObjectId
  parent               Module?             @relation("ModuleParent", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  permissions          Permission[]
  ModulePermissions    ModulePermissions[]
  SubModules           Module[]            @relation("ModuleParent")
  SubModulePermissions ModulePermissions[] @relation("ModuleParent")
}
